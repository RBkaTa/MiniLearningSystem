@using MiniLearningSystem.Models.ViewModels.Course
@model IEnumerable<CourseIndexVm>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    div#row {
        font-size: 18px;
        line-height: 1.3em;
        vertical-align: top;
        margin-bottom: 1em;
        border-radius: 0.5em;
        padding: 1em;
        box-sizing: border-box;
        width: 45%;
    }
</style>

<h2>Index</h2>

@if (TempData["CourseCreated"] != null)
{
    <div class="alert alert-success" id="Success" role="alert">
        @TempData["CourseCreated"]
    </div>
}


@if (this.Context.User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Create New", "CreateCourse", "Admin", new { area = "Admin" }, null)
    </p>
}

@if (Model is null)
{
    <h3> There isn't any Courses !</h3>
}
else
{
    <table class="table table-striped" style="border-spacing: 15px 9rem;">
        <thead>
            <tr>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.StartDate)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.EndDate)
                </th>
                <th scope="col"></th>
            </tr>
        </thead>

        <tbody>
            @foreach (CourseIndexVm item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @if (User.Identity.IsAuthenticated)
                        {
                            if (!item.IsApplyed)
                            {
                                <button type="button" class="btn btn-success" style="margin-bottom:4px">
                                    @Html.ActionLink("Apply", "AddStudent", "Course", new { courseId = item.Id }, new { Id = item.Id, area = "", style = "color:black;" })
                                </button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-danger" style="margin-bottom:4px">
                                    @*<a area="" href="/Course/RemoveStudent/@item.Id" id="3" style="color:black">Cancel</a>*@
                                    @Html.ActionLink("Cancel", "RemoveStudent", "Course", new { courseId = item.Id }, new { courseId = item.Id, area = "", style = "color:black;" })
                                </button>
                            }
                        }
                        @*@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |*@

                        <button class="btn btn-info">
                            @*<a area="" href="/Course/Details/@item.Id" id="4" style="color:black">Details</a>*@
                            @Html.ActionLink("Details", "Details", "Course", new { id = item.Id }, new { id = item.Id, area = "", style = "color:black;" })
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<script>
    (function () {
        $("#Success").delay(2000).fadeOut(2000);
    })()
</script>
